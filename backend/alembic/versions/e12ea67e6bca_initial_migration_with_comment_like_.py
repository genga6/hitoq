"""initial_migration_with_comment_like_types

Revision ID: e12ea67e6bca
Revises:
Create Date: 2025-08-05 08:06:20.314348

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e12ea67e6bca"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "questions",
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.String(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("question_id"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("user_name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=100), nullable=False),
        sa.Column("bio", sa.String(length=300), nullable=True),
        sa.Column("icon_url", sa.String(length=512), nullable=True),
        sa.Column("visits_visible", sa.Boolean(), nullable=False),
        sa.Column(
            "notification_level",
            sa.Enum("none", "important", "all", name="notificationlevelenum"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_users_user_name"), "users", ["user_name"], unique=True)
    op.create_table(
        "answers",
        sa.Column("answer_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("answer_text", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.question_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("answer_id"),
    )
    op.create_table(
        "profile_items",
        sa.Column("profile_item_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("profile_item_id"),
    )
    op.create_table(
        "visits",
        sa.Column("visit_id", sa.Integer(), nullable=False),
        sa.Column("visitor_user_id", sa.String(), nullable=True),
        sa.Column("visited_user_id", sa.String(), nullable=False),
        sa.Column("is_anonymous", sa.Boolean(), nullable=False),
        sa.Column(
            "visited_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["visited_user_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["visitor_user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("visit_id"),
    )
    op.create_table(
        "messages",
        sa.Column("message_id", sa.String(), nullable=False),
        sa.Column("from_user_id", sa.String(), nullable=False),
        sa.Column("to_user_id", sa.String(), nullable=False),
        sa.Column(
            "message_type",
            sa.Enum("comment", "like", name="messagetypeenum"),
            nullable=False,
        ),
        sa.Column("content", sa.String(length=500), nullable=False),
        sa.Column("reference_answer_id", sa.Integer(), nullable=True),
        sa.Column("parent_message_id", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("unread", "read", "replied", name="messagestatusenum"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["from_user_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_message_id"],
            ["messages.message_id"],
        ),
        sa.ForeignKeyConstraint(
            ["reference_answer_id"],
            ["answers.answer_id"],
        ),
        sa.ForeignKeyConstraint(
            ["to_user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("message_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("messages")
    op.drop_table("visits")
    op.drop_table("profile_items")
    op.drop_table("answers")
    op.drop_index(op.f("ix_users_user_name"), table_name="users")
    op.drop_table("users")
    op.drop_table("questions")
    # ### end Alembic commands ###
