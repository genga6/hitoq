name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production # Optional: for environment protection rules and secrets
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Frontend Docker image
        working-directory: ./frontend
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/hitoq-frontend
          IMAGE_TAG=${{ github.sha }}
          docker build \
            --build-arg PUBLIC_API_BASE_URL=${{ vars.PUBLIC_API_BASE_URL }} \
            --build-arg PUBLIC_SENTRY_DSN=${{ vars.PUBLIC_SENTRY_DSN }} \
            --build-arg PUBLIC_ENVIRONMENT=${{ vars.PUBLIC_ENVIRONMENT }} \
            -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Build and push Backend Docker image
        working-directory: ./backend
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/hitoq-backend
          IMAGE_TAG=${{ github.sha }}
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.x.x # Specify your Terraform version

      - name: Terraform Init
        working-directory: ./terraform # Assuming your Terraform files are in this directory
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve # -auto-approve is for CI/CD, be careful with this in production
        env:
          # Render API Key for deployment
          TF_VAR_render_api_key: ${{ secrets.RENDER_API_KEY }}
          TF_VAR_render_owner_id: ${{ secrets.RENDER_OWNER_ID }}

          # Pass image tags to Terraform if needed
          TF_VAR_frontend_image: ghcr.io/${{ github.repository_owner }}/hitoq-frontend:${{ github.sha }}
          TF_VAR_backend_image: ghcr.io/${{ github.repository_owner }}/hitoq-backend:${{ github.sha }}

          # Database Configuration
          TF_VAR_db_host: ${{ secrets.DB_HOST }}
          TF_VAR_db_user: ${{ secrets.DB_USER }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_name: ${{ vars.DB_NAME }}
          TF_VAR_db_port: ${{ vars.DB_PORT }}

          # Application Security
          TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
          TF_VAR_session_secret_key: ${{ secrets.SESSION_SECRET_KEY }}

          # Twitter OAuth Configuration
          TF_VAR_twitter_client_id: ${{ secrets.TWITTER_CLIENT_ID }}
          TF_VAR_twitter_client_secret: ${{ secrets.TWITTER_CLIENT_SECRET }}
          TF_VAR_twitter_redirect_uri: ${{ vars.TWITTER_REDIRECT_URI }}

          # Frontend Configuration
          TF_VAR_frontend_urls: ${{ vars.FRONTEND_URLS }}
          TF_VAR_public_api_base_url: ${{ vars.PUBLIC_API_BASE_URL }}

          # Environment Settings
          TF_VAR_environment: ${{ vars.ENVIRONMENT }}
          TF_VAR_cookie_secure: ${{ vars.COOKIE_SECURE }}
          TF_VAR_log_level: ${{ vars.LOG_LEVEL }}

          # Monitoring and Logging
          TF_VAR_sentry_dsn: ${{ secrets.SENTRY_DSN }}
          TF_VAR_public_sentry_dsn: ${{ vars.PUBLIC_SENTRY_DSN }}
          TF_VAR_public_environment: ${{ vars.PUBLIC_ENVIRONMENT }}

          # CORS Settings
          TF_VAR_cors_allow_methods: ${{ vars.CORS_ALLOW_METHODS }}
          TF_VAR_cors_allow_headers: ${{ vars.CORS_ALLOW_HEADERS }}
